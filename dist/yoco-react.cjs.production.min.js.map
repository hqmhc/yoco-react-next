{"version":3,"file":"yoco-react.cjs.production.min.js","sources":["../src/hooks/useYoco.ts","../src/InlineForm.tsx","../src/hooks/useEFT.ts","../src/hooks/usePopup.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { YocoSDK } from '../types';\n\nconst addScript = (onLoad: () => void) => {\n  const script = document.createElement('script');\n  script.src = 'https://js.yoco.com/sdk/v2/blackbird-web-sdk.js';\n  script.async = true;\n  script.onload = onLoad;\n  document.head.appendChild(script);\n};\n\nexport const useYoco = (publicKey: string, id?: string) => {\n  const [yocoSDK, setYocoSDK] = useState<YocoSDK>();\n  const initSdk = () => {\n    setYocoSDK(\n      new (window as any).BlackbirdSDK({\n        publicKey,\n        id,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (!(window as any).BlackbirdSDK) {\n      addScript(() => initSdk());\n    } else {\n      initSdk();\n    }\n  }, []);\n  return yocoSDK;\n};\n","import React, { FC, HTMLAttributes, ReactChild } from 'react';\n\nexport interface Props extends HTMLAttributes<HTMLFormElement> {\n  children?: ReactChild;\n  onSubmit: () => void;\n}\n\nexport const InlineForm: FC<Props> = ({ children, onSubmit, ...rest }) => {\n  return (\n    <form\n      id=\"payment-form\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        onSubmit();\n      }}\n      {...rest}\n    >\n      <div className=\"one-liner\">\n        <div id=\"card-frame\" className=\"card-frame\"></div>\n      </div>\n      {children}\n    </form>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useYoco } from './useYoco';\n\nimport { YocoCheckoutResult, YocoEFTPopupConfig } from '../types';\n\nexport const useEFT = (publicKey: string) => {\n  const yocoSDK = useYoco(publicKey);\n  const [isYocoReady, setisYocoReady] = useState<boolean>(false);\n\n  function showEFT(params: YocoEFTPopupConfig): Promise<YocoCheckoutResult> {\n    if (!yocoSDK) {\n      throw new Error('YocoSDK not ready.');\n    }\n    return yocoSDK.submit({\n      ...params,\n      paymentType: 'EFT',\n    });\n  }\n\n  useEffect(() => {\n    if (!yocoSDK) {\n      setisYocoReady(false);\n    }\n    setisYocoReady(true);\n  }, [yocoSDK]);\n\n  return [showEFT, isYocoReady] as const;\n};\n","import { useEffect, useState } from 'react';\nimport { useYoco } from './useYoco';\n\nimport { YocoPopupConfig } from '../types';\n\nexport const usePopup = (publicKey: string, paymentId: string) => {\n  const yocoSDK = useYoco(publicKey, paymentId);\n  const [isYocoReady, setisYocoReady] = useState<boolean>(false);\n\n  function showPopup(params: YocoPopupConfig) {\n    yocoSDK?.showPopup(params);\n  }\n\n  useEffect(() => {\n    if (!yocoSDK) {\n      setisYocoReady(false);\n    }\n    setisYocoReady(true);\n  }, [yocoSDK]);\n\n  return [showPopup, isYocoReady] as const;\n};\n"],"names":["useYoco","publicKey","id","useState","yocoSDK","setYocoSDK","initSdk","window","BlackbirdSDK","useEffect","onLoad","script","document","createElement","src","async","onload","head","appendChild","children","onSubmit","rest","React","event","preventDefault","className","isYocoReady","setisYocoReady","params","Error","submit","paymentType","paymentId","showPopup"],"mappings":"iYAYaA,EAAU,SAACC,EAAmBC,SACXC,aAAvBC,OAASC,OACVC,EAAU,WACdD,EACE,IAAKE,OAAeC,aAAa,CAC/BP,UAAAA,EACAC,GAAAA,aAKNO,aAAU,WAnBM,IAACC,EACXC,EAmBEJ,OAAeC,aAGnBF,KAvBaI,EAqBH,kBAAMJ,MApBdK,EAASC,SAASC,cAAc,WAC/BC,IAAM,kDACbH,EAAOI,OAAQ,EACfJ,EAAOK,OAASN,EAChBE,SAASK,KAAKC,YAAYP,MAoBvB,IACIP,sBCvB4B,gBAAGe,IAAAA,SAAUC,IAAAA,SAAaC,iJAE3DC,sCACEpB,GAAG,eACHkB,SAAU,SAACG,GACTA,EAAMC,iBACNJ,MAEEC,GAEJC,uBAAKG,UAAU,aACbH,uBAAKpB,GAAG,aAAauB,UAAU,gBAEhCN,mBCfe,SAAClB,OACfG,EAAUJ,EAAQC,KACcE,YAAkB,GAAjDuB,OAAaC,cAYpBlB,aAAU,WACHL,GACHuB,GAAe,GAEjBA,GAAe,KACd,CAACvB,IAEG,UAjBUwB,OACVxB,QACG,IAAIyB,MAAM,6BAEXzB,EAAQ0B,YACVF,GACHG,YAAa,UAWAL,qBCrBK,SAACzB,EAAmB+B,OACpC5B,EAAUJ,EAAQC,EAAW+B,KACG7B,YAAkB,GAAjDuB,OAAaC,cAMpBlB,aAAU,WACHL,GACHuB,GAAe,GAEjBA,GAAe,KACd,CAACvB,IAEG,UAXYwB,SACjBxB,GAAAA,EAAS6B,UAAUL,IAUFF"}